/* MCP251xFD SPI Device Tree Overlay
 * Originals Copyright (C) 2024 Colorado State University
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;
/plugin/;
/ {
    compatible = "ti,beaglebone", "ti,beaglebone-black"; // Compatible devices
    exclusive-use = "P9.31", "P9.29", "P9.30", "P9.28", "P8.13", "gpio0_23"; // Pins used for SPI1 and GPIO interrupt
    fragment@0 {
        target = <&spi0>;
        __overlay__ {
            status = "okay";
            #address-cells = <1>;
            #size-cells = <0>;
            spidev@0 {
                status = "disabled";
                reg = <0>;
            };
        };
    };
    fragment@1 {
        target = <&spi1>;
        __overlay__ {
            status = "okay";
            #address-cells = <1>;
            #size-cells = <0>;
            spidev@1 {
                status = "disabled";
                reg = <1>;
            };
        };
    };

    fragment@2 {
        target = <&am33xx_pinmux>;
        __overlay__ {
            spi1_pins: pinmux_spi1_pins {
                pinctrl-single,pins = <
                    0x190 0x33  /* P9.31 (SPI1_SCLK) | MODE3 | pullup I guess bc internet says so??? */
                    0x194 0x33  /* P9.29 (SPI1_D0)   | MODE3 | RXACTIVE */
                    0x198 0x13  /* P9.30 (SPI1_D1)   | MODE3 */
                >;
            };

            can2_cs: pinmux_can2_cs {
                pinctrl-single,pins = <
                    0x19c 0x13  /* P9.28 (SPI1_CS0)  | MODE3 */
                >;
            };

            can2_int: pinmux_can2_int {
                pinctrl-single,pins = <
                    0x024 0x37  /* P8.13 (GPIO0_23)  | MODE7 | RXACTIVE */
                >;
            };

            can3_cs: pinmux_can3_cs {
                pinctrl-single,pins = <
                    0x164 0x12  /* P9.42 (SPI1_CS1) | MODE 2 */
                >;
            };

            can3_int: pinmux_can3_int {
                pinctrl-single,pins = <
                    0x034 0x37  /* P8.11 (GPIO0_45)  | MODE7 | RXACTIVE */
                >;
            };
        };
    };
    fragment@3 {
        target-path = "/"; // Target the root path
        __overlay__ {
            mcp2518fd_clock: mcp2518fd_clock {
                compatible = "fixed-clock"; // Define a fixed clock
                #clock-cells = <0>; // No additional clock cells
                clock-frequency = <40000000>; // 40 MHz clock for MCP2518FD
            };
        };
    };

    fragment@4 {
        target = <&spi1>; // Target the SPI1 controller
        __overlay__ {
            status = "okay";
            #address-cells = <1>;
            #size-cells = <0>;
            can2: can2@0 {
                compatible = "microchip,mcp2518fd";
                reg = <0>;
                pinctrl-names = "default";
                pinctrl-0 = <&can2_cs &can2_int>;
                spi-max-frequency = <17000000>;
                interrupt-parent = <&gpio0>;
                interrupts = <23 0x2>;
                clocks = <&mcp2518fd_clock>;
                //ti,pindir-d0-out-d1-in = <1>;
                mcp251xfd,oscillator-frequency = <40000000>; // 40 MHz oscillator frequency
                mcp251xfd,irq-gpios = <&gpio0 23 0>; // GPIO0_23 for interrupt, active low
                mcp251xfd,stay-awake = <1>; // Keep MCP2518FD awake
                mcp251xfd,enable-clkout = <1>; // Enable clock output
            };

            can3: can3@1 {
                compatible = "microchip,mcp2518fd";
                reg = <1>;
                pinctrl-names = "default";
                pinctrl-0 = <&spi1_pins &can3_cs &can3_int>;
                spi-max-frequency = <17000000>;
                interrupt-parent = <&gpio1>;
                interrupts = <13 0x2>;
                clocks = <&mcp2518fd_clock>;
                //ti,pindir-d0-out-d1-in = <1>;
                mcp251xfd,oscillator-frequency = <40000000>; // 40 MHz oscillator frequency
                mcp251xfd,irq-gpios = <&gpio1 13 0>; // GPIO0_23 for interrupt, active low
                mcp251xfd,stay-awake = <1>; // Keep MCP2518FD awake
                mcp251xfd,enable-clkout = <1>; // Enable clock output
            };
        };
    };
    __overrides__ {
        oscillator = <&mcp2518fd_clock>,"clock-frequency:0"; // Override for clock frequency
        spimaxfrequency = <&can2 &can3>,"spi-max-frequency:0"; // Override for SPI max frequency
        interrupt = <&can2_int>, <&can3_int>,"pinctrl-single,pins:0", <&can2>, <&can3>,"interrupts:0"; // Override for interrupt pin and type
    };
};